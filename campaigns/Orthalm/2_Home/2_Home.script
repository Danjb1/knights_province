// Knights Province dynamic script.
// Wiki available at: https://github.com/Kromster80/knights_province/wiki
// Script made by DarkianMaker

const
  HUMAN_PLAYER = 0;
  ALLY_1 = 2;
  ENEMY_1 = 1;
  ENEMY_2 = 3;
  ENEMY_3 = 4;
var
  ObjDefend, ObjDestroy, ObjRebuild, ObjFarms, ObjCiders, ObjLumbers: Integer;
  
  FarmsRebuilt, CidersRebuilt, LumberjacksRebuilt, AllRebuilt: Boolean;
  Enemy2Defeated, Enemy3Defeated, AssaultDefeated: Boolean;

procedure OnMissionStart;
begin
  Actions.PlayerNameSet(HUMAN_PLAYER, '<$3>');
  Actions.PlayerNameSet(ENEMY_1, '<$4>');
  Actions.PlayerNameSet(ALLY_1, '<$5>');
  Actions.PlayerNameSet(ENEMY_2, '<$6>');
  Actions.PlayerNameSet(ENEMY_3, '<$7>');
  Actions.PlayerAllianceChange(HUMAN_PLAYER, ALLY_1, true, false);
  Actions.PlayerMessageOpen(HUMAN_PLAYER, '<$25>');
  ObjDefend := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 0, osActive, '<$15>');
  ObjDestroy := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otMain, 1, osHidden, '<$16>');
  ObjRebuild := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otAdditional, 2, osHidden, '<$17>');
  ObjFarms := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otAdditional, 3, osHidden, '<$18>');
  ObjCiders := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otAdditional, 4, osHidden, '<$19>');
  ObjLumbers := Actions.PlayerObjectiveAdd(HUMAN_PLAYER, otAdditional, 5, osHidden, '<$20>');
end;

procedure OnPlayerDefeated(aPlayer: Integer);
begin
  if aPlayer = ENEMY_2 then Enemy2Defeated := true;
  if aPlayer = ENEMY_3 then Enemy3Defeated := true;
  
  if aPlayer = ENEMY_1 then
    begin
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjDestroy, osCompleted);
	  Actions.PlayerWin([HUMAN_PLAYER], True);
	end;
end;

procedure CheckRebuildingProgress;
begin
  if (States.StatHouseTypeCount(HUMAN_PLAYER, htFarm) >= 3) then
  begin
    FarmsRebuilt := true;
	Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjFarms, osCompleted);
  end;
  if (States.StatHouseTypeCount(HUMAN_PLAYER, htWoodcutters) >= 2) then
  begin
    LumberjacksRebuilt := true;
	Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjLumbers, osCompleted);
  end;
  if (States.StatHouseTypeCount(HUMAN_PLAYER, htCiderMaker) >= 2) then
  begin
    CidersRebuilt := true;
	Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjCiders, osCompleted);
  end;
  
  if FarmsRebuilt and LumberjacksRebuilt and CidersRebuilt then
    begin
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjRebuild, osCompleted);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjFarms, osHidden);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjLumbers, osHidden);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjCiders, osHidden);
	  Actions.PlayerMessageOpen(0, '<$27>');
	  Actions.GiveGroup(HUMAN_PLAYER, utMilitia, 74, 58, 6, 30, 6);
	  AllRebuilt := true;
	end;
end;

procedure CheckAssaultStatus;
begin
  if Enemy2Defeated and Enemy3Defeated then
    begin
      Actions.PlayerMessageOpen(0, '<$26>');
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjDefend, osCompleted);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjDestroy, osActive);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjRebuild, osActive);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjFarms, osActive);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjCiders, osActive);
	  Actions.PlayerObjectiveUpdateStatus(HUMAN_PLAYER, ObjLumbers, osActive);
	  AssaultDefeated := true;
	end;
end;

procedure OnTick(aTick: Integer);
begin
  if AllRebuilt = false then CheckRebuildingProgress;
  if AssaultDefeated = false then CheckAssaultStatus;
end;